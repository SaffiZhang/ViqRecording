input CreateViqRecordingAttachmentInput {
	id: ID!
	description: String!
	url: String!
	updatedDateTime: String!
	updatedBy: String!
	viqRecordingAttachmentViqRecordingId: ID!
}

input CreateViqRecordingBookmarkInput {
	id: ID!
	order: Int!
	dateTime: String!
	speaker: String
	content: String!
	updatedDateTime: String!
	updatedBy: String!
	viqRecordingBookmarkRecordingId: ID!
}

input CreateViqRecordingInput {
	id: ID
	interviewee: String!
	interviewFinish: String!
	interviewStart: String!
	officerCollarNumber: String!
	location: String!
	unitId: String!
}

input CreateViqRecordingLogInput {
	id: ID!
	dateTime: String!
	description: String!
	userName: String!
	recordId: String!
	tableName: String!
	viqRecordingLogViqRecordingId: ID!
}

input CreateViqRecordingRedactionInput {
	id: ID!
	redactionVersion: String!
	description: String!
	updatedDateTime: String!
	updatedBy: String!
	status: String!
	viqRecordingRedactionViqRecordingUrlId: ID!
}

input CreateViqRecordingRedactionIntervalInput {
	id: ID!
	redactionVersion: String!
	startSecond: Int!
	endSecond: Int!
	type: String!
	viqRecordingRedactionIntervalRedactionId: ID!
}

input CreateViqRecordingSharedInput {
	id: ID!
	createdDateTime: String!
	createdBy: String!
	receiver: String!
	receiver_email: String!
	receiver_type: String!
	expiry_date: String!
	token: String!
	urls: [String]!
	status: String!
	description: String
	viqRecordingSharedViqRecordingId: ID!
}

input CreateViqRecordingTranscriptionInput {
	id: ID
	submitTime: String!
	transcriptionFileUrl: String!
	status: String!
	viqRecordingTranscriptionViqRecordingId: ID!
}

input CreateViqRecordingUrlInput {
	id: ID!
	url: String!
	lastmodified: String!
	description: String!
	camera: String!
	version: String!
	viqRecordingUrlViqRecordingId: ID!
}

input DeleteViqRecordingAttachmentInput {
	id: ID
}

input DeleteViqRecordingBookmarkInput {
	id: ID
}

input DeleteViqRecordingInput {
	id: ID
}

input DeleteViqRecordingLogInput {
	id: ID
}

input DeleteViqRecordingRedactionInput {
	id: ID
}

input DeleteViqRecordingRedactionIntervalInput {
	id: ID
}

input DeleteViqRecordingSharedInput {
	id: ID
}

input DeleteViqRecordingTranscriptionInput {
	id: ID
}

input DeleteViqRecordingUrlInput {
	id: ID
}

input ModelBooleanFilterInput {
	ne: Boolean
	eq: Boolean
}

input ModelFloatFilterInput {
	ne: Float
	eq: Float
	le: Float
	lt: Float
	ge: Float
	gt: Float
	contains: Float
	notContains: Float
	between: [Float]
}

input ModelIDFilterInput {
	ne: ID
	eq: ID
	le: ID
	lt: ID
	ge: ID
	gt: ID
	contains: ID
	notContains: ID
	between: [ID]
	beginsWith: ID
}

input ModelIntFilterInput {
	ne: Int
	eq: Int
	le: Int
	lt: Int
	ge: Int
	gt: Int
	contains: Int
	notContains: Int
	between: [Int]
}

enum ModelSortDirection {
	ASC
	DESC
}

input ModelStringFilterInput {
	ne: String
	eq: String
	le: String
	lt: String
	ge: String
	gt: String
	contains: String
	notContains: String
	between: [String]
	beginsWith: String
}

type ModelViqRecordingAttachmentConnection {
	items: [ViqRecordingAttachment]
	nextToken: String
}

input ModelViqRecordingAttachmentFilterInput {
	id: ModelIDFilterInput
	description: ModelStringFilterInput
	url: ModelStringFilterInput
	viqRecordingAttachmentViqRecordingId: ModelStringFilterInput
	and: [ModelViqRecordingAttachmentFilterInput]
	or: [ModelViqRecordingAttachmentFilterInput]
	not: ModelViqRecordingAttachmentFilterInput
}

type ModelViqRecordingBookmarkConnection {
	items: [ViqRecordingBookmark]
	nextToken: String
}

input ModelViqRecordingBookmarkFilterInput {
	id: ModelIDFilterInput
	dateTime: ModelStringFilterInput
	speaker: ModelStringFilterInput
	content: ModelStringFilterInput
	updatedDateTime: ModelStringFilterInput
	updatedBy: ModelStringFilterInput
	viqRecordingBookmarkViqRecordingId: ModelStringFilterInput
	and: [ModelViqRecordingBookmarkFilterInput]
	or: [ModelViqRecordingBookmarkFilterInput]
	not: ModelViqRecordingBookmarkFilterInput
}

type ModelViqRecordingConnection {
	items: [ViqRecording]
	nextToken: String
}

input ModelViqRecordingFilterInput {
	id: ModelStringFilterInput
	interviewee: ModelStringFilterInput
	interviewFinish: ModelStringFilterInput
	interviewStart: ModelStringFilterInput
	officerCollarNumber: ModelStringFilterInput
	location: ModelStringFilterInput
	unitId: ModelStringFilterInput
	and: [ModelViqRecordingFilterInput]
	or: [ModelViqRecordingFilterInput]
	not: ModelViqRecordingFilterInput
}

type ModelViqRecordingLogConnection {
	items: [ViqRecordingLog]
	nextToken: String
}

input ModelViqRecordingLogFilterInput {
	id: ModelIDFilterInput
	dateTime: ModelStringFilterInput
	description: ModelStringFilterInput
	userName: ModelStringFilterInput
	viqRecordingLogViqRecordingId: ModelStringFilterInput
	and: [ModelViqRecordingLogFilterInput]
	or: [ModelViqRecordingLogFilterInput]
	not: ModelViqRecordingLogFilterInput
}

type ModelViqRecordingRedactionConnection {
	items: [ViqRecordingRedaction]
	nextToken: String
}

input ModelViqRecordingRedactionFilterInput {
	id: ModelIDFilterInput
	redactionVersion: ModelStringFilterInput
	viqRecordingRedactionViqRecordingUrlId: ModelStringFilterInput
	and: [ModelViqRecordingRedactionFilterInput]
	or: [ModelViqRecordingRedactionFilterInput]
	not: ModelViqRecordingRedactionFilterInput
}

type ModelViqRecordingRedactionIntervalConnection {
	items: [ViqRecordingRedactionInterval]
	nextToken: String
}

input ModelViqRecordingRedactionIntervalFilterInput {
	id: ModelIDFilterInput
	ViqRecordingRedactionIntervalRedactionId: ModelStringFilterInput
	and: [ModelViqRecordingRedactionIntervalFilterInput]
	or: [ModelViqRecordingRedactionIntervalFilterInput]
	not: ModelViqRecordingRedactionIntervalFilterInput
}

type ModelViqRecordingSharedConnection {
	items: [ViqRecordingShared]
	nextToken: String
}

input ModelViqRecordingSharedFilterInput {
	id: ModelIDFilterInput
	dateTime: ModelStringFilterInput
	receiver: ModelStringFilterInput
	receiver_email: ModelStringFilterInput
	receiver_type: ModelStringFilterInput
	token: ModelStringFilterInput
	urls: ModelStringFilterInput
	expiry_date: ModelStringFilterInput
	createdDateTime: ModelStringFilterInput
	createdBy: ModelStringFilterInput
	status: ModelStringFilterInput
	viqRecordingSharedViqRecordingId: ModelStringFilterInput
	and: [ModelViqRecordingSharedFilterInput]
	or: [ModelViqRecordingSharedFilterInput]
	not: ModelViqRecordingSharedFilterInput
}

type ModelViqRecordingTranscriptionConnection {
	items: [ViqRecordingTranscription]
	nextToken: String
}

input ModelViqRecordingTranscriptionFilterInput {
	id: ModelIDFilterInput
	submitTime: ModelStringFilterInput
	viqRecordingTranscriptionViqRecordingId: ModelStringFilterInput
	and: [ModelViqRecordingTranscriptionFilterInput]
	or: [ModelViqRecordingTranscriptionFilterInput]
	not: ModelViqRecordingTranscriptionFilterInput
}

type ModelViqRecordingUrlConnection {
	items: [ViqRecordingUrl]
	nextToken: String
}

input ModelViqRecordingUrlFilterInput {
	id: ModelIDFilterInput
	url: ModelStringFilterInput
	lastmodified: ModelStringFilterInput
	description: ModelStringFilterInput
	camera: ModelStringFilterInput
	version: ModelStringFilterInput
	viqRecordingUrlViqRecordingId: ModelStringFilterInput
	and: [ModelViqRecordingUrlFilterInput]
	or: [ModelViqRecordingUrlFilterInput]
	not: ModelViqRecordingUrlFilterInput
}

type Mutation {
	createViqRecording(input: CreateViqRecordingInput!): ViqRecording
	updateViqRecording(input: UpdateViqRecordingInput!): ViqRecording
	deleteViqRecording(input: DeleteViqRecordingInput!): ViqRecording
	createViqRecordingAttachment(input: CreateViqRecordingAttachmentInput!): ViqRecordingAttachment
	updateViqRecordingAttachment(input: UpdateViqRecordingAttachmentInput!): ViqRecordingAttachment
	deleteViqRecordingAttachment(input: DeleteViqRecordingAttachmentInput!): ViqRecordingAttachment
	createViqRecordingUrl(input: CreateViqRecordingUrlInput!): ViqRecordingUrl
	updateViqRecordingUrl(input: UpdateViqRecordingUrlInput!): ViqRecordingUrl
	deleteViqRecordingUrl(input: DeleteViqRecordingUrlInput!): ViqRecordingUrl
	createViqRecordingLog(input: CreateViqRecordingLogInput!): ViqRecordingLog
	updateViqRecordingLog(input: UpdateViqRecordingLogInput!): ViqRecordingLog
	deleteViqRecordingLog(input: DeleteViqRecordingLogInput!): ViqRecordingLog
	createViqRecordingRedaction(input: CreateViqRecordingRedactionInput!): ViqRecordingRedaction
	updateViqRecordingRedaction(input: UpdateViqRecordingRedactionInput!): ViqRecordingRedaction
	deleteViqRecordingRedaction(input: DeleteViqRecordingRedactionInput!): ViqRecordingRedaction
	createViqRecordingRedactionInterval(input: CreateViqRecordingRedactionIntervalInput!): ViqRecordingRedactionInterval
	updateViqRecordingRedactionInterval(input: UpdateViqRecordingRedactionIntervalInput!): ViqRecordingRedactionInterval
	deleteViqRecordingRedactionInterval(input: DeleteViqRecordingRedactionIntervalInput!): ViqRecordingRedactionInterval
	createViqRecordingBookmark(input: CreateViqRecordingBookmarkInput!): ViqRecordingBookmark
	updateViqRecordingBookmark(input: UpdateViqRecordingBookmarkInput!): ViqRecordingBookmark
	deleteViqRecordingBookmark(input: DeleteViqRecordingBookmarkInput!): ViqRecordingBookmark
	createViqRecordingTranscription(input: CreateViqRecordingTranscriptionInput!): ViqRecordingTranscription
	updateViqRecordingTranscription(input: UpdateViqRecordingTranscriptionInput!): ViqRecordingTranscription
	deleteViqRecordingTranscription(input: DeleteViqRecordingTranscriptionInput!): ViqRecordingTranscription
	createViqRecordingShared(input: CreateViqRecordingSharedInput!): ViqRecordingShared
	updateViqRecordingShared(input: UpdateViqRecordingSharedInput!): ViqRecordingShared
	deleteViqRecordingShared(input: DeleteViqRecordingSharedInput!): ViqRecordingShared
}

type Query {
	getViqRecording(id: ID!): ViqRecording
	listViqRecordings(filter: ModelViqRecordingFilterInput, limit: Int, nextToken: String): ModelViqRecordingConnection
	getViqRecordingAttachment(id: ID!): ViqRecordingAttachment
	listViqRecordingAttachments(filter: ModelViqRecordingAttachmentFilterInput, limit: Int, nextToken: String): ModelViqRecordingAttachmentConnection
	getViqRecordingUrl(id: ID!): ViqRecordingUrl
	listViqRecordingUrls(filter: ModelViqRecordingUrlFilterInput, limit: Int, nextToken: String): ModelViqRecordingUrlConnection
	getViqRecordingLog(id: ID!): ViqRecordingLog
	listViqRecordingLogs(filter: ModelViqRecordingLogFilterInput, limit: Int, nextToken: String): ModelViqRecordingLogConnection
	getViqRecordingRedaction(id: ID!): ViqRecordingRedaction
	listViqRecordingRedactions(filter: ModelViqRecordingRedactionFilterInput, limit: Int, nextToken: String): ModelViqRecordingRedactionConnection
	getViqRecordingRedactionInterval(id: ID!): ViqRecordingRedactionInterval
	listViqRecordingRedactionsInterval(filter: ModelViqRecordingRedactionIntervalFilterInput, limit: Int, nextToken: String): ModelViqRecordingRedactionIntervalConnection
	getViqRecordingBookmark(id: ID!): ViqRecordingBookmark
	listViqRecordingBookmark(filter: ModelViqRecordingBookmarkFilterInput, limit: Int, nextToken: String): ModelViqRecordingBookmarkConnection
	getViqRecordingTranscription(id: ID!): ViqRecordingTranscription
	listViqRecordingTranscriptions(filter: ModelViqRecordingTranscriptionFilterInput, limit: Int, nextToken: String): ModelViqRecordingTranscriptionConnection
	getViqRecordingShared(id: ID!): ViqRecordingShared
	listViqRecordingShareds(filter: ModelViqRecordingSharedFilterInput, limit: Int, nextToken: String): ModelViqRecordingSharedConnection
}

type Subscription {
	onCreateViqRecording: ViqRecording
		@aws_subscribe(mutations: ["createViqRecording"])
	onUpdateViqRecording: ViqRecording
		@aws_subscribe(mutations: ["updateViqRecording"])
	onDeleteViqRecording: ViqRecording
		@aws_subscribe(mutations: ["deleteViqRecording"])
	onCreateViqRecordingAttachment: ViqRecordingAttachment
		@aws_subscribe(mutations: ["createViqRecordingAttachment"])
	onUpdateViqRecordingAttachment: ViqRecordingAttachment
		@aws_subscribe(mutations: ["updateViqRecordingAttachment"])
	onDeleteViqRecordingAttachment: ViqRecordingAttachment
		@aws_subscribe(mutations: ["deleteViqRecordingAttachment"])
	onCreateViqRecordingUrl: ViqRecordingUrl
		@aws_subscribe(mutations: ["createViqRecordingUrl"])
	onUpdateViqRecordingUrl: ViqRecordingUrl
		@aws_subscribe(mutations: ["updateViqRecordingUrl"])
	onDeleteViqRecordingUrl: ViqRecordingUrl
		@aws_subscribe(mutations: ["deleteViqRecordingUrl"])
	onCreateViqRecordingLog: ViqRecordingLog
		@aws_subscribe(mutations: ["createViqRecordingLog"])
	onUpdateViqRecordingLog: ViqRecordingLog
		@aws_subscribe(mutations: ["updateViqRecordingLog"])
	onDeleteViqRecordingLog: ViqRecordingLog
		@aws_subscribe(mutations: ["deleteViqRecordingLog"])
	onCreateViqRecordingRedaction: ViqRecordingRedaction
		@aws_subscribe(mutations: ["createViqRecordingRedaction"])
	onUpdateViqRecordingRedaction: ViqRecordingRedaction
		@aws_subscribe(mutations: ["updateViqRecordingRedaction"])
	onDeleteViqRecordingRedaction: ViqRecordingRedaction
		@aws_subscribe(mutations: ["deleteViqRecordingRedaction"])
	onCreateViqRecordingTranscription: ViqRecordingTranscription
		@aws_subscribe(mutations: ["createViqRecordingTranscription"])
	onUpdateViqRecordingTranscription: ViqRecordingTranscription
		@aws_subscribe(mutations: ["updateViqRecordingTranscription"])
	onDeleteViqRecordingTranscription: ViqRecordingTranscription
		@aws_subscribe(mutations: ["deleteViqRecordingTranscription"])
	onCreateViqRecordingShared: ViqRecordingShared
		@aws_subscribe(mutations: ["createViqRecordingShared"])
	onUpdateViqRecordingShared: ViqRecordingShared
		@aws_subscribe(mutations: ["updateViqRecordingShared"])
	onDeleteViqRecordingShared: ViqRecordingShared
		@aws_subscribe(mutations: ["deleteViqRecordingShared"])
}

input UpdateViqRecordingAttachmentInput {
	id: ID!
	description: String
	url: String
	updatedDateTime: String
	updatedBy: String
	viqRecordingAttachmentViqRecordingId: ID
}

input UpdateViqRecordingBookmarkInput {
	id: ID!
	order: Int
	dateTime: String
	speaker: String
	content: String
	updatedDateTime: String
	updatedBy: String
	viqRecordingBookmarkViqRecordingId: ID
}

input UpdateViqRecordingInput {
	id: String!
	interviewee: String
	interviewFinish: String
	interviewStart: String
	officerCollarNumber: String
	location: String
	unitId: String
}

input UpdateViqRecordingLogInput {
	id: ID!
	dateTime: String
	description: String
	userName: String
	recordId: String
	tableName: String
	viqRecordingLogViqRecordingId: ID
}

input UpdateViqRecordingRedactionInput {
	id: ID!
	redactionVersion: String
	description: String
	updatedDateTime: String
	updatedBy: String
	status: String
	viqRecordingRedactionViqRecordingUrlId: ID
}

input UpdateViqRecordingRedactionIntervalInput {
	id: ID!
	redactionVersion: String
	startSecond: Int
	endSecond: Int
	type: String
	viqRecordingRedactionViqRecordingUrlId: ID
}

input UpdateViqRecordingSharedInput {
	id: ID!
	dateTime: String
	receiver: String
	receiver_email: String
	receiver_type: String
	expiry_date: String
	token: String
	urls: [String]
	status: String
	viqRecordingSharedViqRecordingId: ID
}

input UpdateViqRecordingTranscriptionInput {
	id: ID!
	submitTime: String
	transcriptionFileUrl: String
	status: String
	viqRecordingTranscriptionViqRecordingId: ID
}

input UpdateViqRecordingUrlInput {
	id: ID!
	url: String
	lastmodified: String
	description: String
	camera: String
	version: String
	viqRecordingUrlViqRecordingId: ID
}

type ViqRecording {
	id: String!
	interviewee: String!
	interviewFinish: String!
	interviewStart: String!
	officerCollarNumber: String!
	location: String!
	unitId: String!
	attachments(
		filter: ModelViqRecordingAttachmentFilterInput,
		sortDirection: ModelSortDirection,
		limit: Int,
		nextToken: String
	): ModelViqRecordingAttachmentConnection
	recordingUrls(
		filter: ModelViqRecordingUrlFilterInput,
		sortDirection: ModelSortDirection,
		limit: Int,
		nextToken: String
	): ModelViqRecordingUrlConnection
	logs(
		filter: ModelViqRecordingLogFilterInput,
		sortDirection: ModelSortDirection,
		limit: Int,
		nextToken: String
	): ModelViqRecordingLogConnection
	transcriptions(
		filter: ModelViqRecordingTranscriptionFilterInput,
		sortDirection: ModelSortDirection,
		limit: Int,
		nextToken: String
	): ModelViqRecordingTranscriptionConnection
	bookmarks(
		filter: ModelViqRecordingBookmarkFilterInput,
		sortDirection: ModelSortDirection,
		limit: Int,
		nextToken: String
	): ModelViqRecordingBookmarkConnection
	shareds(
		filter: ModelViqRecordingSharedFilterInput,
		sortDirection: ModelSortDirection,
		limit: Int,
		nextToken: String
	): ModelViqRecordingSharedConnection
}

type ViqRecordingAttachment {
	id: ID!
	description: String!
	url: String!
	updatedDateTime: String!
	updatedBy: String!
	viqRecording: ViqRecording
}

type ViqRecordingBookmark {
	id: ID!
	order: Int!
	dateTime: String!
	speaker: String
	content: String!
	updatedDateTime: String
	updatedBy: String
	viqRecording: ViqRecording
}

type ViqRecordingLog {
	id: ID!
	dateTime: String!
	description: String!
	userName: String!
	recordId: String!
	tableName: String!
	viqRecording: ViqRecording
}

type ViqRecordingRedaction {
	id: ID!
	redactionVersion: String!
	description: String!
	updatedDateTime: String
	updatedBy: String
	status: String!
	viqRecordingUrl: ViqRecordingUrl
	intervals(
		filter: ModelViqRecordingRedactionIntervalFilterInput,
		sortDirection: ModelSortDirection,
		limit: Int,
		nextToken: String
	): ModelViqRecordingRedactionIntervalConnection
}

type ViqRecordingRedactionInterval {
	id: ID!
	redactionVersion: String!
	startSecond: Int!
	endSecond: Int!
	type: String!
	viqRecordingRedacton: ViqRecordingRedaction
}

type ViqRecordingShared {
	id: ID!
	createdDateTime: String!
	createdBy: String!
	receiver: String!
	receiver_email: String!
	receiver_type: String!
	expiry_date: String!
	token: String!
	urls: [String]!
	status: String!
	description: String!
	viqRecording: ViqRecording
}

type ViqRecordingTranscription {
	id: ID!
	submitTime: String!
	transcriptionFileUrl: String!
	status: String!
	viqRecording: ViqRecording
}

type ViqRecordingUrl {
	id: ID!
	url: String!
	lastmodified: String!
	description: String!
	camera: String!
	version: String!
	redactions(
		filter: ModelViqRecordingRedactionFilterInput,
		sortDirection: ModelSortDirection,
		limit: Int,
		nextToken: String
	): ModelViqRecordingRedactionConnection
	viqRecording: ViqRecording
}